// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	common "github.com/hyperledger/fabric-protos-go/common"
	mock "github.com/stretchr/testify/mock"
)

// ConfigUpdateProposer is an autogenerated mock type for the ConfigUpdateProposer type
type ConfigUpdateProposer struct {
	mock.Mock
}

// ProposeConfigUpdate provides a mock function with given fields: channel, configtx
func (_m *ConfigUpdateProposer) ProposeConfigUpdate(channel string, configtx *common.Envelope) (*common.ConfigEnvelope, error) {
	ret := _m.Called(channel, configtx)

	var r0 *common.ConfigEnvelope
	if rf, ok := ret.Get(0).(func(string, *common.Envelope) *common.ConfigEnvelope); ok {
		r0 = rf(channel, configtx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*common.ConfigEnvelope)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *common.Envelope) error); ok {
		r1 = rf(channel, configtx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewConfigUpdateProposer interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfigUpdateProposer creates a new instance of ConfigUpdateProposer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfigUpdateProposer(t mockConstructorTestingTNewConfigUpdateProposer) *ConfigUpdateProposer {
	mock := &ConfigUpdateProposer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
