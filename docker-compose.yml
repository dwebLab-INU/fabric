
version: '2'
services:
  zookeeper1:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  zookeeper2:
    image: wurstmeister/zookeeper
    ports:
      - "2182:2181"
  zookeeper3:
    image: wurstmeister/zookeeper
    ports:
      - "2183:2181"

  kafka1:
    image: wurstmeister/kafka
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_NUM_PARTITIONS: 8
      BOOTSTRAP_SERVERS: kafka1:9091, kafka2:9092, kafka3:9093
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181, zookeeper2:2182, zookeeper3:2183
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS : PLAINTEXT://kafka1:9090, PLAINTEXT_HOST://kafka1:9091
      KAFKA_ADVERTISED_LISTENERS : PLAINTEXT://kafka1:9090, PLAINTEXT_HOST://${KAFKA_BROKER1}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP : PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME : PLAINTEXT
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M" 
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    depends_on:
      - "zookeeper1"
      - "zookeeper2"
      - "zookeeper3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka2:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_NUM_PARTITIONS: 8
      BOOTSTRAP_SERVERS:  kafka1:9091, kafka2:9092, kafka3:9093
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181, zookeeper2:2182, zookeeper3:2183
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LISTENERS : PLAINTEXT://kafka2:9090, PLAINTEXT_HOST://kafka2:9092
      KAFKA_ADVERTISED_LISTENERS : PLAINTEXT://kafka2:9090, PLAINTEXT_HOST://${KAFKA_BROKER2}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP : PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME : PLAINTEXT
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    depends_on:
      - "zookeeper1"
      - "zookeeper2"
      - "zookeeper3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: wurstmeister/kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_NUM_PARTITIONS: 8
      BOOTSTRAP_SERVERS: kafka1:9091, kafka2:9092, kafka3:9093
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181, zookeeper2:2182, zookeeper3:2183
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_LISTENERS : PLAINTEXT://kafka3:9090, PLAINTEXT_HOST://kafka3:9093
      KAFKA_ADVERTISED_LISTENERS : PLAINTEXT://kafka3:9090, PLAINTEXT_HOST://${KAFKA_BROKER3}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP : PLAINTEXT:PLAINTEXT, PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME : PLAINTEXT
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    depends_on:
      - "zookeeper1"
      - "zookeeper2"
      - "zookeeper3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      HOST: 127.0.0.1
      KAFKA_BROKERCONNECT: kafka1:9090, kafka2:9090, kafka3:9090
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka1
      - kafka2
      - kafka3